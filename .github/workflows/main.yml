name: Deploy to Alibaba Cloud ECS

on:
  # 监控的 github 分支
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
 
env:
  IMAGE_NAME: kathyblog/kathyblog   # 镜像名，阿里云的镜像仓库命名规则
  IMAGE_TAG: v0.1.0                             # 镜像的版本号，   
  REGION: cn-shanghai                           # 阿里云镜像地址   
  # ACCESS_KEY_ID: ${{ secrets.ALI_EC2_ACCESS_KEY }}      # 登陆ecs 服务器 id ，可以是 root,放在 secrets中
  # ACCESS_KEY_SECRET: ${{ secrets.ALI_EC2_SECRET_KEY }}   # 登陆 ecs 服务器 私钥，放在 secrets 中
  # ECS_CLUSTER_ID:  ${{ secrets.ALI_EC2_EXTERNAL_HOST }}                       # 服务器地址

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    
    # Checkout the repository
    - name: Checkout
      uses: actions/checkout@v2
      
    # Set up Python environment
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.9'

    # 登陆 阿里云镜像仓库地址
    - name: Configure Docker
      uses: docker/login-action@v1
      with:
        registry: registry.${{ env.REGION }}.aliyuncs.com
        username: ${{ secrets.ALIYUN_CONTAINER_REGISTRY_USERNAME }}
        password: ${{ secrets.ALIYUN_CONTAINER_REGISTRY_PASSWORD }}
    
    # 更具代码仓库的Dockerfile创建镜像并且 推送到服务器 
    - name: Build Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        file: Dockerfile
        push: true
        tags: registry.${{ env.REGION }}.aliyuncs.com/${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
        build-args: |
            DJANGO_SECRET_KEY=${{ secrets.DJANGO_SECRET_KEY }}
            PG_DBNAME=${{ secrets.PG_DBNAME }}
            PG_DBUSER=${{ secrets.PG_DBUSER }}
            PG_PASSWORD=${{ secrets.PG_PASSWORD }}
            PG_HOST=${{ secrets.PG_HOST }}
            PG_PORT=${{ secrets.PG_PORT }}
 
            APIKEY_OPENAI=${{ secrets.APIKEY_OPENAI }}
            ORGANIZATION_OPENAI=${{ secrets.ORGANIZATION_OPENAI }}
            APIKEY_CLAUDE=${{ secrets.APIKEY_CLAUDE }}
 
            MINIO_URL=${{ secrets.MINIO_URL }}
            MINIO_STORAGE_ENDPOINT=${{ secrets.MINIO_STORAGE_ENDPOINT }}
            MINIO_STORAGE_ACCESS_KEY=${{ secrets.MINIO_STORAGE_ACCESS_KEY }}
            MINIO_STORAGE_SECRET_KEY=${{ secrets.MINIO_STORAGE_SECRET_KEY }}
            MINIO_STORAGE_MEDIA_BUCKET_NAME=${{ secrets.MINIO_STORAGE_MEDIA_BUCKET_NAME }}
 

      env:
        DOCKER_USERNAME: ${{ secrets.ALIYUN_CONTAINER_REGISTRY_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.ALIYUN_CONTAINER_REGISTRY_PASSWORD }}
             
